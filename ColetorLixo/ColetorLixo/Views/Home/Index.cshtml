@{
    ViewBag.Title = "Coletor de Lixo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Coletor de Lixo</h2>

<div class="controls left">
    <label for="interval">Intervalo (em segundos)</label>
    <input type="number" id="interval" class="input" />
    <br />
    <input id="start" type="button" value="start" class="button left" />
    <input id="pause" type="button" value="pause" class="button left" />
    <input id="stop" type="button" value="stop" class="button" />

    <div id="status"></div>
</div>

<div class="matrix left">        
    <div class="controls clear">
        <label>Adicionar agente:</label>
        <label for="agent" class="left">Tipo de agente:</label>
        <select id="agent" class="left">
          <option value="COLLECTOR">Coletor</option>
          <option value="TRASH">Lixeira</option>
          <option value="CHARGER">Carregador</option>
          <option value="GARBAGE">Lixo</option>
        </select>

        <label id="label_garbage_type" for="garbage" class="left" style="display: none">Tipo de lixo:</label>
        <select id="garbage" class="left" style="display: none">
          <option value="Glass">Vidro</option>
          <option value="Paper">Papel</option>
          <option value="Metal">Metal</option>
          <option value="Plastic">Plástico</option>
        </select>

        <input id="add" class="left" type="button" value="Adicionar" class="button left" />
    </div>
    <label for="log" class="clear">Ambiente</label>
    <div id="container"></div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        DrawTable();
        var timer = null;

        $("#start").click(function () {
            if (timer !== null) return;

            var interval = $("#interval").val();

            if (interval < 1 || interval > 60) {
                alert("O intervalo deve estar entre 1 e 60");
                return;
            }

            timer = setInterval(CallPopulateMatrix, interval * 1000);
        });

        $("#pause").click(function () {
            clearInterval(timer);
            timer = null;
        });

        $("#stop").click(function () {
            location.reload();
        });

        $("#add").click(function () {
            AddAgent($('#agent').val(), $('#garbage').val());
        });

        $("#agent").change(function () {
            $("#label_garbage_type").hide();
            $("#garbage").hide();

            if ($('#agent').val() == 'TRASH' || $('#agent').val() == 'GARBAGE') {
                $("#label_garbage_type").show();
                $("#garbage").show();
            }
        });
    });

    function CallPopulateMatrix() {
        $.ajax({
            dataType: "json",
            async: true,
            url: '@Url.Action("PopulateMatrix")',
            success: function (data) {
                $("#container").html(data.Html);
                $("#status").html(data.Status);

                if (data.Complete === "True")
                    $("#pause").trigger("click");
            },
            error: function () {
                alert("Nenhum dado recebido.");
            }
        });
    }

    function DrawTable() {
        $.ajax({
            dataType: "json",
            async: true,
            url: '@Url.Action("DrawTable")',
            success: function (data) {
                $("#container").html(data.Html);
                $("#status").html(data.Status);
            },
            error: function () {
                alert("Nenhum dado recebido.");
            }
        });
    }

    function AddAgent(agentType, garbageType) {
        $.ajax({
            dataType: "json",
            async: true,
            url: '@Url.Action("AddAgent")',
            data: { type: agentType, garbage: garbageType },
            success: function (data) {
                DrawTable();
            },
            error: function (data) {
                alert(data.result);
            }
        });
    }


</script>
